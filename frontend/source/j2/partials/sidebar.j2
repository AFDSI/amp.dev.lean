{% do doc.styles.addCssFile('css/components/organisms/stage-destination-dropdown-sidebar.css') %}
{% do doc.styles.addCssFile('css/components/organisms/sidebar.css') %}
{% do doc.icons.useIcon('icons/chevron-down-solid.svg') %}
{% do doc.icons.useIcon('icons/angle-down-solid.svg') %}
{% do doc.icons.useIcon('icons/angle-down-light.svg') %}

<section class="sidebar">
  <div class="ad-o-sidebar">

    <div class="destination-stage-sidebar websites websites-background">
      <div class="destination-stage-sidebar-content">
        <span class="hl">Select your topic:</span>
        <div class="destination-list-view-box-sidebar destination-list-view-box-sidebar-gradient"
          [class]="toggle ? 'destination-list-view-box-sidebar destination-list-view-box-sidebar-gradient destination-list-view-box-expand': 'destination-list-view-box-sidebar destination-list-view-box-sidebar-gradient'">
            <button on="tap:AMP.setState({ toggle: !toggle })" class="destination-list-icon">
              <svg><use xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="#chevron-down-solid"></use></svg>
            </button>
          <amp-selector layout="container">
            <ul class="destination-list">
              {% set filters = ['all', 'websites', 'ads', 'stories', 'e-mails'] %}
              {% for filter in filters %}
                <li class="{{ filter }}" option="{{ filter }}">
                  <a href="#" class="destination-list-item destination-list-item-drop-down {{ filter }} {{ filter }}-background">
                    {{ filter }}
                  </a>
                </li>
              {% endfor %}
            </ul>
          </amp-selector>
        </div>
      </div>
    </div>
    <div class="ad-o-sidebar-list ad-o-sidebar-list-main">
      <amp-accordion animate>

        {% for collections in g.collection('amp-dev/documentation').collections() %}

          {# get all collections inside of documentation, split its path and render only the collections related to current document #}
          {% set collectionName = collections.collection_path.split('/')[2] %}

          {# if a document is nested deeper than one collection, get the name of its parent collection #}
          {% set currenctDocCollection = doc.url.path.split('/')[2] %}

          {% if collectionName == doc.base or collectionName == currenctDocCollection %}

          {# TODO: toplevelDocs are not in the correct order and passing order into blueprint.yaml doesn't work  #}

            {% for topLevelDocs in g.collection(collections.collection_path).collections() %}
              {% set topLevelCategory = topLevelDocs.category %}
              <section class="ad-o-sidebar-list-section">
                <header class="ad-o-sidebar-list-item ad-o-sidebar-list-header">
                  {{ topLevelDocs.category }}
                  <div class="ad-a-ico ad-o-sidebar-list-icon">
                    <svg><use xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="#angle-down-solid"></use></svg>
                  </div>
                </header>
                <ul class="ad-o-sidebar-list ad-o-sidebar-list-sub">

                {# start of second level navigation #}

                  {% for secondLevelDocs in g.docs(topLevelDocs.collection_path) %}
                     <li class="ad-o-sidebar-list-item ad-o-sidebar-list-item-sub">
                      <a href="{{ secondLevelDocs.url.path }}" class="ad-o-sidebar-list-item-lnk {% if secondLevelDocs.title == doc.title %} ad-o-sidebar-list-item-lnk-selected {% endif %}">
                        {{ secondLevelDocs.title }}
                      </a>
                    </li>

                    {# start of third level content rendering #}
                    {% for secondLevelCollections in g.collection(topLevelDocs.collection_path).collections() %}
                      {% set secondLevelCategory = secondLevelCollections.category %}
                      {% if secondLevelCategory == secondLevelDocs.title %}
                      <ul class="ad-o-sidebar-list ad-o-sidebar-list-sub">
                        {% for thirdLevelDocuments in g.docs(secondLevelCollections.collection_path) %}
                         <li class="ad-o-sidebar-list-item ad-o-sidebar-list-item-sub">
                            <a href="{{ thirdLevelDocuments.url.path }}" class="ad-o-sidebar-list-item-lnk {% if thirdLevelDocuments.title == doc.title %} ad-o-sidebar-list-item-lnk-selected {% endif %}">
                              {{ thirdLevelDocuments.title }}
                            </a>
                          </li>
                        {% endfor %}
                        </ul>
                      {% endif %}
                    {% endfor %}
                    {# end of third level content rendering #}
                  {% endfor %}
                  {# end of second level content rendering #}

                </ul>
              </section>
            {% endfor %}
          {% endif %}
        {% endfor %}

      </amp-accordion>
    </div>

  </div>
</section>
