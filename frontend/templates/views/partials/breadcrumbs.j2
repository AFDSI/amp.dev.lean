{% do doc.styles.addCssFile('css/components/molecules/breadcrumbs.css') %}
{% do doc.icons.useIcon('icons/angle-down-solid.svg') %}

{% if not doc.breadcrumbs == False %}
{% set pod_path_segments = (doc.pod_path|string).split('/') %}

{# Define recursive macro for auto-generating breadcrumbs navigation #}
{% macro breadcrumbs(i=1) %}
  {# Strip out /content/amp-dev/ from the pod_path, and take a new segment per iteration #}
  {% set new_path = '/' + pod_path_segments[1:i+3]|join('/') %}

  {# Concatenate path with /index.md and .html extensions, and check if document exists #}
  {% set doc_md = g.doc(new_path + '/index.md', locale=doc.locale) %}
  {% set doc_html = g.doc(new_path + '/index.html', locale=doc.locale) %}
  {% set doc_exists = doc_md.exists or doc_html.exists %}

  {# Compare current doc path with fully expanded breadcrumb path #}
  {% set is_current = doc.url.path == ('/'+(new_path|string).split('/')[3:]|join('/')+'/') %}

  {# Define custom exemptions condition to skip iterations of the loop #}
  {% set exemptions = g.collection(new_path).view == '/views/detail/component-detail.j2' %}

  {# Check if item is an existing collection (have child pages)
     Additionally, skip the loop for custom exemptions. See variable above #}
  {% if g.collection(new_path) in g.collections([]) and not exemptions %}
    {# Show divider icon before item, except of the first #}
    {% if i > 1 %}
    <span class="ap-m-breadcrumbs-divider">
      <svg class="ap-a-ico ap-m-breadcrumbs-icon">
        <use xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="#angle-down-solid"></use>
      </svg>
    </span>
    {% endif %}

    {# Only set anchor if item is an existing document and it's not the currently viewing page #}
    {% if doc_exists and not is_current %}
      {% set document = doc_md if doc_md.exists else doc_html %}
      <a class="ap-m-breadcrumbs-crumb" href="{{ document.url.path }}">{{ document.collection.title }}</a>
    {% else %}
      <div class="ap-m-breadcrumbs-crumb">{{ g.collection(new_path).title }}</div>
    {% endif %}

    {# Recursively call the macro until the beginning condition fails #}
    {{ breadcrumbs(i=i+1) }}
  {% endif %}
{% endmacro %}

<nav class="ap-m-breadcrumbs">
{{ breadcrumbs() }}
</nav>
{% endif %}
