<script>
document.addEventListener("DOMContentLoaded", function(event) {
  (window.AMP = window.AMP || []).push(function(AMP) {

    function areAllExperimentsEnabled() {
      {% for experiment in experiments %}
      console.log('isExperimentOn {{ experiment }}:' + AMP.isExperimentOn('{{ experiment }}'));
      if (!AMP.isExperimentOn('{{ experiment }}')) {
        return false;
      }
      {% endfor %}

      return true;
    }

    function enableExperiments() {
      {% for experiment in experiments %}
      if (!AMP.isExperimentOn('{{ experiment }}')) {
        AMP.toggleExperiment('{{ experiment }}');
      }
      {% endfor %}

      location.reload();
    }

    function disableExperiments() {
      {% for experiment in experiments %}
      if (AMP.isExperimentOn('{{ experiment }}')) {
        AMP.toggleExperiment('{{ experiment }}');
      }
      {% endfor %}

      location.reload();
    }

    // enable active experiment button
    var experimentToggle = document.getElementById('experiments-toggle');
    var indicator = document.getElementById('indicator');
    if (!areAllExperimentsEnabled()) {
      experimentToggle.addEventListener('click', enableExperiments);
      indicator.classList.add('off');
    } else {
      experimentToggle.checked = true;
      experimentToggle.addEventListener('click', disableExperiments);
      indicator.classList.add('on');
    }

    // Set appropriate state on channel indicator
    if (!window.AMP_CONFIG.canary) {
      document.getElementById('prod-channel').classList.add('active');
    } else {
      document.getElementById('dev-channel').classList.add('active');
    }

    // Inform inspecting user that this intenioally invalid AMP
    if (window.location.hash.includes('development=1')) {
      console.log('This sample is intentionally not valid AMP.');
    }
  });
});
</script>
